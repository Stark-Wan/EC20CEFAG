#! /bin/sh

mode=0
pcm_mode_select=1
rate=2048000
quec_auxpcm_rate=8000
num_slots=1
slot_mapping=1
frame=5
quant=2
data=0

if [ $pcm_mode_select -eq 1 ]; then
	data=0
else
	data=1
fi

if [ $rate -eq 256000 ] ;then
	if [ $quec_auxpcm_rate -eq 8000 ]; then
		frame=2
	else
		frame=1 
	fi
elif [ $rate -eq 512000 ]; then
	if [ $quec_auxpcm_rate -eq 8000 ]; then
		frame=3
	else
		frame=2
	fi
elif [ $rate -eq 1024000 ]; then
	if [ $quec_auxpcm_rate -eq 8000 ]; then
		frame=4
	else
		frame=3
	fi
elif [ $rate -eq 2048000 ]; then
	if [ $quec_auxpcm_rate -eq 8000 ]; then
		frame=5
	else
		frame=4
	fi
elif [ $rate -eq 4096000 ]; then
	if [ $quec_auxpcm_rate -eq 8000 ]; then
		frame=6
	else
		frame=5
	fi
fi

# long or short sync
# 1 - long, 
# 0 - short
echo "$mode" > /sys/devices/soc:qcom,msm-sec-auxpcm/mode

# master or slave mode
# 1 - master
# 0 - slave
echo "$pcm_mode_select" > /sys/devices/soc:qcom,msm-sec-auxpcm/sync

# master or slave mode
# 1 - master
# 0 - slave
echo "$pcm_mode_select" > /sys/devices/soc:sound/pcm_mode_select

# bit per frame(BPF)
# 6 - 512BPF not support 
# 5 - 256BPF 
# 4 - 128BPF
# 3 - 64BPF 
# 2 - 32BPF
# 1 - 16BPF 
# 0 - 8BPF
echo "$frame" > /sys/devices/soc:qcom,msm-sec-auxpcm/frame

# pcm format, only support 16 bit linear now
# 2 - 16 bit linear
# 1 - 8-bit a-law
# 0 - 8-bit u-law
echo "$quant" > /sys/devices/soc:qcom,msm-sec-auxpcm/quant

# data fill, 0 or 1
echo "$data" > /sys/devices/soc:qcom,msm-sec-auxpcm/data

# pcm clk, support 256000, 512000, 1024000, 2048000, 4096000
echo "$rate" > /sys/devices/soc:qcom,msm-sec-auxpcm/rate

# num_slots
echo "$num_slots" > /sys/devices/soc:qcom,msm-sec-auxpcm/num_slots

# slot mapping, support 1 ~ 16
echo "$slot_mapping" > /sys/devices/soc:qcom,msm-sec-auxpcm/slot_mapping

#pcm sync, support 8000 and 16000
echo "$quec_auxpcm_rate" > /sys/devices/soc:sound/quec_auxpcm_rate

