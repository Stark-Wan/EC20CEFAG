#!/bin/sh
#
# Copyright (c) 2013-2015, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived from
#       this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE DISCLAIMED.  IN NO
# EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# DESCRIPTION:  DIAG+ADB+MBIM+GNSS

echo "Switching to composition number 0x9085"

if [ "$1" = "y" ]; then
	num="1"
	mode="hsic"
else
	num="0"
	mode="hsusb"
fi

if [ "$#" -ge 2 ]; then
	delay=$2
else
	delay="0"
fi

if [ "$#" -ge 3 ]; then
	from_adb=$3
else
	from_adb="n"
fi

run_9x15() {
	echo 0 > /sys/class/android_usb/android$num/enable
	echo 0x9085 > /sys/class/android_usb/android$num/idProduct
	echo 0x05C6 > /sys/class/android_usb/android$num/idVendor
	echo 239 > /sys/class/android_usb/android$num/bDeviceClass
	echo 2 > /sys/class/android_usb/android$num/bDeviceSubClass
	echo 1 > /sys/class/android_usb/android$num/bDeviceProtocol
	echo diag > /sys/class/android_usb/android0/f_diag/clients
	echo diag,adb,usb_mbim,gps > /sys/class/android_usb/android$num/functions
	echo 1 > /sys/class/android_usb/android$num/remote_wakeup
	sleep $delay
	echo 1 > /sys/class/android_usb/android$num/enable
}

run_9x25() {
	echo 0 > /sys/class/android_usb/android$num/enable
	echo 0x9085 > /sys/class/android_usb/android$num/idProduct
	echo 0x05C6 > /sys/class/android_usb/android$num/idVendor
	echo 239 > /sys/class/android_usb/android$num/bDeviceClass
	echo 2 > /sys/class/android_usb/android$num/bDeviceSubClass
	echo 1 > /sys/class/android_usb/android$num/bDeviceProtocol
	echo diag > /sys/class/android_usb/android0/f_diag/clients
	echo diag,adb,usb_mbim,gps > /sys/class/android_usb/android$num/functions
	echo BAM2BAM_IPA > /sys/class/android_usb/android$num/f_usb_mbim/mbim_transports
	echo 1 > /sys/class/android_usb/android$num/remote_wakeup
	sleep $delay
	echo 1 > /sys/class/android_usb/android$num/enable
}

run_9x35() {
	if [ $from_adb = "n" ]
	then
		pkill adbd
	fi
	echo 0 > /sys/class/android_usb/android$num/enable
	echo 9085 > /sys/class/android_usb/android$num/idProduct
	echo 05C6 > /sys/class/android_usb/android$num/idVendor
	echo 239 > /sys/class/android_usb/android$num/bDeviceClass
	echo 2 > /sys/class/android_usb/android$num/bDeviceSubClass
	echo 1 > /sys/class/android_usb/android$num/bDeviceProtocol
	echo diag > /sys/class/android_usb/android0/f_diag/clients
	echo diag,ffs,usb_mbim,gps > /sys/class/android_usb/android$num/functions
	echo BAM2BAM_IPA > /sys/class/android_usb/android0/f_usb_mbim/mbim_transports
	echo 1 > /sys/class/android_usb/android$num/remote_wakeup
	sleep $delay
	echo 1 > /sys/class/android_usb/android$num/enable
	if [ $from_adb = "n" ]
	then
		/etc/init.d/adbd start
	fi
}

run_9607() {
	if [ $from_adb = "n" ]
	then
		pkill adbd
	fi
	echo 0 > /sys/class/android_usb/android$num/enable
	echo 9085 > /sys/class/android_usb/android$num/idProduct
	echo 05C6 > /sys/class/android_usb/android$num/idVendor
	echo 239 > /sys/class/android_usb/android$num/bDeviceClass
	echo 2 > /sys/class/android_usb/android$num/bDeviceSubClass
	echo 1 > /sys/class/android_usb/android$num/bDeviceProtocol
	echo diag > /sys/class/android_usb/android0/f_diag/clients
	echo diag,adb,usb_mbim,gps > /sys/class/android_usb/android$num/functions
	echo BAM_DMUX > /sys/class/android_usb/android0/f_usb_mbim/mbim_transports
	echo 1 > /sys/class/android_usb/android$num/remote_wakeup
	sleep $delay
	echo 1 > /sys/class/android_usb/android$num/enable
	if [ $from_adb = "n" ]
	then
		/etc/init.d/adbd start
	fi
}

run_californium() {
	if [ $from_adb = "n" ]
	then
		pkill adbd
	fi
	echo 0 > /sys/class/android_usb/android$num/enable
	echo 9085 > /sys/class/android_usb/android$num/idProduct
	echo 05C6 > /sys/class/android_usb/android$num/idVendor
	echo 239 > /sys/class/android_usb/android$num/bDeviceClass
	echo 2 > /sys/class/android_usb/android$num/bDeviceSubClass
	echo 1 > /sys/class/android_usb/android$num/bDeviceProtocol
	echo diag > /sys/class/android_usb/android0/f_diag/clients
	echo diag,ffs,mbim_gsi,gps > /sys/class/android_usb/android$num/functions
	echo 1 > /sys/class/android_usb/android$num/remote_wakeup
	sleep $delay
	echo 1 > /sys/class/android_usb/android$num/enable
	if [ $from_adb = "n" ]
	then
		/etc/init.d/adbd start
	fi
}

case `source /sbin/usb/target` in
	*9x15* )
		run_9x15 &
		;;
	*9x25* )
		run_9x25 &
		;;
	*9x35* )
		run_9x35 &
		;;
	*9607* )
		run_9607 &
		;;
	*8909* )
		run_9607 &
		;;
	*9640* )
		run_9x35 &
		;;
	*californium* )
		run_californium &
		;;
	* )
		run_9x15 &
		;;
esac

