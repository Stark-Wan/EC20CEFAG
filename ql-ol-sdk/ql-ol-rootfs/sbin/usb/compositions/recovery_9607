#!/bin/sh
#
# Copyright (c) 2012-2015, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived from
#       this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE DISCLAIMED.  IN NO
# EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# DESCRIPTION: DIAG + ADB + MODEM + NMEA + QMI_RMNET + Mass Storage (Android)
QUEC_USB_PID=0125
QUEC_USB_VID=2C7C
num="0"
mode="hsusb"

if [ -f /sbin/usb/compositions/quec_usb_pid ]
then 
QUEC_USB_PID=`cat /sbin/usb/compositions/quec_usb_pid`
echo "[Max][USB_DEF_ID_CHECK] quec_usb_pid exists!" > /dev/kmsg
else
echo "[Max][USB_DEF_ID_CHECK] quec_usb_pid NOT exists!" > /dev/kmsg
fi

if [ -f /sbin/usb/compositions/quec_usb_vid ]
then 
QUEC_USB_VID=`cat /sbin/usb/compositions/quec_usb_vid`
echo "[Max][USB_DEF_ID_CHECK] quec_usb_vid exists!" > /dev/kmsg
else
echo "[Max][USB_DEF_ID_CHECK] quec_usb_vid NOT exists!" > /dev/kmsg
fi

echo "[Max][USB_DEF_ID_CHECK] USB ID in fs: pid is $QUEC_USB_PID && pid is $QUEC_USB_VID" > /dev/kmsg

if [ $from_adb = "n" ]
then
	pkill adbd
fi

echo $mode > /sys/bus/platform/devices/usb_bam/enable
echo 0 > /sys/class/android_usb/android$num/enable
echo $QUEC_USB_PID > /sys/class/android_usb/android$num/idProduct
echo $QUEC_USB_VID > /sys/class/android_usb/android$num/idVendor
echo diag > /sys/class/android_usb/android0/f_diag/clients
echo tty,tty,tty > /sys/class/android_usb/android0/f_serial/transports
echo QTI,BAM_DMUX > /sys/class/android_usb/android0/f_rmnet/transports
echo diag,serial,rmnet > /sys/class/android_usb/android$num/functions
echo 1 > /sys/class/android_usb/android$num/remote_wakeup
sleep $delay
echo 1 > /sys/class/android_usb/android$num/enable
if [ $from_adb = "n" ]
then
	/etc/init.d/adbd start
fi

